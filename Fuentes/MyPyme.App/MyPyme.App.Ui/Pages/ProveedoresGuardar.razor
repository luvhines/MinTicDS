@page "/proveedoresguardar"
@page "/proveedoresguardar/{Id:int}"

@using Model.Clases
@using Interfaces
@inject IServicioProveedor ServicioProveedor
@inject NavigationManager Navegador

<div class="cabecera_pag">
    <div class="cabecera_pag_zona1">
        <div id="icon1"></div>
    </div>
    <div class="cabecera_pag_zona2">
        <h3>Proveedores</h3>
    </div>
    <div class="cabecera_pag_zona3">
        <button id="boton_home"><a href="/"></a></button>
    </div>
</div>

<EditForm Model="proveedor"> 

    <table class="table">
        <tr>
            <td ><label id="lbl1" for="NIT">NIT</label></td>
            <td id="td2"><input type="text" @bind="proveedor.pvd_nit"></td>
        </tr>
        <tr>
            <td ><label id="lbl1"  for="Nombre Proveedor">Nombre</label></td>
            <td id="td2"><input type="text" @bind="proveedor.pvd_nombre"></td>
        </tr>
        <tr>
            <td ><label id="lbl1"  for="Telefono">Telefono</label></td>
            <td id="td2"><input type="text" @bind="proveedor.pvd_telefono"></td>
        </tr>

        <tr> 
            <td ><label id="lbl1" for="Direccion">Direccion</label></td>
            <td id="td2"><input type="text" @bind="proveedor.pvd_direccion"></td>
        </tr>
        <tr>
            <td><label id="lbl1" type="email" for="Correo">Correo</label></td>
            <td id="td2"><input type="text" @bind="proveedor.pvd_correo"></td>
        </tr>

        <tr colspan="2" style="text-align: center">
            <td><input type="submit" value="Guardar" @onclick="Guardar"></td>
            <td id="td2">
                <a href="/"><input type="submit" value="Cancelar" @onclick="Cancelar"></a>
            </td>
        </tr>

    </table>
 
</EditForm>


@code {

    [Parameter]
    public int Id { get; set; }

    Proveedor proveedor = new Proveedor();

    protected async Task Guardar()
    {
        await ServicioProveedor.GuardarProveedor(proveedor);
        Navegador.NavigateTo("/proveedoreslista");
    }

    protected void Cancelar()
    {
        Navegador.NavigateTo("/proveedoreslista");
    }

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            proveedor = await ServicioProveedor.GetProveedor(Id);
        }
    }

}
